trading-bot/
├── app/
│   ├── analysis/
│   │   ├── __init__.py
│   │   ├── analysis_runner.py                    # Analysis logic coordinator
│   │   ├── data_cleaning.py                      # Data cleaning logic
│   │   ├── data_fetching.py                      # Data fetching logic
│   │   ├── dataset_metrics.py                    # Dataset metrics
│   │   ├── per_trade_metrics.py                  # Per trade metrics
│   │   └── trades_matching.py                    # Matching trades
│   ├── backtesting/
│   │   ├── cache/                                # Caching system for backtesting
│   │   │   ├── cache_base.py                     # Base cache class
│   │   │   ├── dataframe_cache.py                # Dataframe caching
│   │   │   └── indicators_cache.py               # Indicator caching
│   │   ├── indicators/                           # Technical indicators for backtesting
│   │   │   ├── __init__.py
│   │   │   ├── atr.py                            # Average True Range indicator
│   │   │   ├── bollinger_bands.py                # Bollinger Bands indicator
│   │   │   ├── ema.py                            # Exponential Moving Average indicator
│   │   │   ├── ichimoku.py                       # Ichimoku Cloud indicator
│   │   │   ├── macd.py                           # Moving Average Convergence Divergence indicator
│   │   │   └── rsi.py                            # Relative Strength Index indicator
│   │   ├── strategies/                           # Trading strategies to backtest
│   │   │   ├── __init__.py
│   │   │   ├── base_strategy.py                  # Base strategy class
│   │   │   ├── bollinger_bands.py                # Bollinger Bands strategy
│   │   │   ├── ema_crossover.py                  # EMA Crossover strategy
│   │   │   ├── ichimoku_cloud.py                 # Ichimoku Cloud strategy
│   │   │   ├── macd.py                           # MACD strategy
│   │   │   └── rsi.py                            # RSI strategy
│   │   ├── __init__.py
│   │   ├── mass_testing.py                       # Mass testing framework
│   │   ├── per_trade_metrics.py                  # Per trade metrics
│   │   ├── strategy_analysis.py                  # Strategy analysis utilities
│   │   ├── strategy_factory.py                   # Strategy creation factory
│   │   └── summary_metrics.py                    # Summary metrics
│   ├── routes/
│   │   ├── __init__.py
│   │   └── webhook.py                            # Webhooks from the TradingView
│   ├── services/
│   │   ├── ibkr/
│   │   │   ├── __init__.py
│   │   │   ├── connection.py                     # IBKR API connections
│   │   │   ├── contracts.py                      # Contracts handling
│   │   │   └── orders.py                         # Order execution
│   │   ├── __init__.py
│   │   └── ibkr_service.py                       # IBKR logic coordinator
│   ├── utils/
│   │   ├── analysis_utils/
│   │   │   ├── __init__.py
│   │   │   ├── data_cleaning_utils.py            # Data cleaning utilities
│   │   │   ├── data_fetching_utils.py            # Data fetching utilities
│   │   │   └── analysis_utils.py                 # General calculation utilities
│   │   ├── backtesting_utils/
│   │   │   ├── __init__.py
│   │   │   └── indicators_utils.py                # Indicators utilities
│   │   ├── ibkr_utils/
│   │   │   ├── __init__.py
│   │   │   ├── contracts_utils.py                # Contracts utilities
│   │   │   └── orders_utils.py                   # Orders utilities
│   │   ├── routes_utils/
│   │   │   └── webhook_utils.py                  # Webhook utilities
│   │   ├── __init__.py
│   │   ├── api_utils.py                          # General API utilities
│   │   ├── file_utils.py                         # File utilities  
│   │   ├── generic_utils.py                      # Generic utilities
│   │   └── logger.py                             # Logger setup           
│   └── __init__.py
├── backtesting_data/                             # Backtesting results data
│   ├── cache/                                    # Cache storage for backtesting
│   └── csv_results/                              # CSV results from backtesting
├── clientportal/                                 # IBKR login gateway
├── data/
│   ├── analysis/
│   │   ├── alerts/                               # Performance analysis based on alerts
│   │   ├── trades/                               # Performance analysis based on trades
│   │   └── tw_alerts/                            # Performance analysis based on TW alerts
│   ├── contracts/                                # Contracts ids
│   └── raw_data/
│       ├── alerts/                               # Raw alerts data
│       ├── trades/                               # Raw trades data
│       └── tw_alerts/                            # Raw TW alerts
├── historical_data/
│   ├── 1!/                                       # Front month
│   ├── 2!/                                       # Next month
│   └── contract_switch_dates.yaml                # Configuration for contract switch dates
├── logs/
│   ├── debug.log                                 # Debug logs
│   ├── error.log                                 # Error logs
│   └── info.log                                  # Info logs
├── strategies/
│   ├── indicators/                               # Indicators
│   ├── indicators_testing/                       # Testing indicators
│   ├── strategies/                               # Strategies
│   └── tw_indicators/                            # TW indicators
├── tests/                                        # Tests directory
│   ├── analysis/                                 # Analysis tests
│   ├── backtesting/                              # Backtesting tests
│   ├── e2e/                                      # End-to-end tests
│   ├── routes/                                   # Routes tests
│   ├── services/                                 # Services tests
│   └── utils/                                    # Utils tests
├── .env                                          # Configuration secrets
├── .github/                                      # GitHub workflows
├── .gitignore                                    # Files to ignore
├── analyze.py                                    # Run analysis
├── analyze_strategies.py                         # Analyze strategies
├── config.py                                     # App configuration
├── mass_backtest.py                              # Run mass backtesting
├── README.md                                     # Project overview
├── requirements.txt                              # Dependencies
├── run.py                                        # App startup script
├── structure.yaml                                # App's structure
└── tw_fetching.py                                # TradingView data fetching

# Analysis
# TODO [MEDIUM]: Rewrite analysis logic using classes
# TODO [LOW]: Add automatic Google Sheets integration

# Backtesting
# NOTE: I've got a date gap for the 5m interval from 20.05 onward, different for each symbol
# TODO [MEDIUM]: Run extensive backtesting
# TODO [MEDIUM]: Implement out-of-sample data testing
# TODO [MEDIUM]: Check intervals within a timeframe separately. For example split the time into 4 sections
# TODO [LOW]: Add advanced portfolio-level backtesting
# TODO [LOW]: Update margin requirements on a monthly basis as they change over time [last update in 05.2025]
# TODO [LOW]: Download new historic data on a monthly basis [last update in 05.2025]
# TODO [LOW]: Add contract switch dates for missing symbols
# TODO [LOW]: Add new strategies
# TODO [LOW]: Add strategy performance heatmaps

# Trading
# TODO [MEDIUM]: Rewrite IBKR logic using classes
# TODO [LOW]: Some symbols have different tickers on TW vs IBKR, for example YC vs XC etc.
# TODO [LOW]: Handle near delivery cases where I still hold a position close to the Close-Out date

# Developer
# TODO [LOW]: Add docstrings everywhere
# TODO [LOW]: Set up a database
# TODO [LOW]: Set up UI

# Tests
# TODO [MEDIUM]: Remove helping comments and leave only those that actually bring value
# TODO [LOW]: Add e2e tests

# Virtual Machine
