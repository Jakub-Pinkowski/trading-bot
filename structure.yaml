trading-bot/
├── app/
│   ├── analysis/
│   │   ├── __init__.py
│   │   ├── analysis_runner.py                    # Analysis logic coordinator
│   │   ├── data_cleaning.py                      # Data cleaning logic
│   │   ├── data_fetching.py                      # Data fetching logic
│   │   ├── dataset_metrics.py                    # Dataset metrics
│   │   ├── per_trade_metrics.py                  # Per trade metrics
│   │   └── trades_matching.py                    # Matching trades
│   ├── routes/
│   │   ├── __init__.py
│   │   └── webhook.py                            # Webhooks from the TradingView
│   ├── services/
│   │   ├── ibkr/
│   │   │   ├── __init__.py
│   │   │   ├── connection.py                     # IBKR API connections
│   │   │   ├── contracts.py                      # Contracts handling
│   │   │   └── orders.py                         # Order execution
│   │   ├── __init__.py
│   │   └── ibkr_service.py                       # IBKR logic coordinator
│   ├── utils/
│   │   ├── analysis_utils/
│   │   │   ├── __init__.py
│   │   │   ├── data_cleaning_utils.py            # Data cleaning utilities
│   │   │   ├── data_fetching_utils.py            # Data fetching utilities
│   │   │   └── analysis_utils.py                 # General calculation utilities
│   │   ├── ibkr_utils/
│   │   │   ├── __init__.py
│   │   │   ├── connection_utils.py               # Connection utilities
│   │   │   ├── contract_utils.py                 # Contracts utilities
│   │   │   ├── ibkr_utils.py                     # Generic IBKR utilities
│   │   │   └── orders_utils.py                   # Orders utilities
│   │   ├── routes_utils/
│   │   │   └── orders_utils.py                   # Webhook utilities
│   │   ├── __init__.py
│   │   ├── api_utils.py                          # General API utilities
│   │   ├── file_utils.py                         # File utilities  
│   │   ├── generic_utils.py                      # Generic utilities
│   │   └── logger.py                             # Logger setup           
│   └── __init__.py
├── clientportal/                                 # IBKR login gateway
├── data/
│   ├── analysis/
│   │   ├── alerts/                               # Performance analysis based on alerts
│   │   ├── trades/                               # Performance analysis based on trades
│   │   └── tw_alerts/                            # Performance analysis based on TW alerts
│   ├── contracts/                                # Contracts ids
│   └── raw_data/
│   │   ├── alerts/                               # Raw alerts data
│   │   ├── trades/                               # Raw trades data
│   │   └── tw_alerts/                            # Raw TW alerts
├── logs/
│   ├── debug.log                                 # Debug logs
│   ├── error.log                                 # Error logs
│   └── info.logs                                 # Info logs 
├── .env                                          # Configuration secrets
├── .gitignore                                    # Files to ignore
├── analyze.py                                    # Run analysis
├── config.py                                     # App configuration
├── README.md                                     # Project overview
├── requirements.txt                              # Dependencies
├── run.py                                        # App startup script
└── structure.yaml                                # App's structure

# Functionality
# TODO: Create an automatic tool that logs and maintains the session. Similar to ibeam (https://github.com/Voyz/ibeam)
# TODO: Handle near delivery cases where I still hold a position close to the Close-Out date
# NOTE: The month of the futures doesn't matter all that much as price movements are largely similar

# Virtual Machine
# NOTE: On 28.04 at 01:17 - User is not authenticated
# NOTE: On 03.05 at 01:41 - User is not authenticated, 06:30 - Unexpected error while tickling IBKR API
# NOTE: On 04.05 at 00:01 - User is not authenticated, No Java error. At 00:00:06 - Unexpected error while tickling IBKR API: 503 Server Error: Service Unavailable for url.

# Data analysis
# TODO: Add automatic Google Sheets integration
# BUG: Error when there are no alerts/trades to analyze

# Developer
# TODO: Add proper logging everywhere in the app
# TODO: Set up a database
# TODO: Set up UI
# TODO: Add/update unit tests for every component