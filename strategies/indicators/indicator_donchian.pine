//@version=6
indicator(title="Donchian Channels", overlay=true)

// === INPUTS ===
length = input.int(40, title="Donchian Channel Length", minval=1)
useMiddleChannel = input.bool(true, title="Show Middle Channel")
useBreakoutSignals = input.bool(true, title="Use Breakout Signals")
useRangeCompressionSignals = input.bool(false, title="Use Range Compression Signals")
requireConfirmation = input.bool(true, title="Require Confirmation (Reduces Signals)")
atrPeriod = input.int(14, title="ATR Period for Filtering")
minBreakoutSize = input.float(0.5, title="Minimum Breakout Size (ATR Multiple)", minval=0, step=0.1)

// === DONCHIAN CHANNELS CALCULATION ===
upper = ta.highest(high, length)
lower = ta.lowest(low, length)
middle = (upper + lower) / 2

// === SIGNALS ===
// Calculate ATR for filtering
atr = ta.atr(atrPeriod)

// Breakout signals with confirmation and size filter
breakoutSize = close - upper[1]
breakoutSizeDown = lower[1] - close
significantBreakout = breakoutSize > atr * minBreakoutSize
significantBreakoutDown = breakoutSizeDown > atr * minBreakoutSize

// Basic breakout signals
basicBreakoutBuy = close > upper[1]  // Price breaks above the upper channel
basicBreakoutSell = close < lower[1] // Price breaks below the lower channel

// Confirmed breakout signals (requires 2 consecutive closes beyond the channel)
confirmedBreakoutBuy = basicBreakoutBuy and close[1] > upper[2]
confirmedBreakoutSell = basicBreakoutSell and close[1] < lower[2]

// Final breakout signals based on user preferences
breakoutBuy = requireConfirmation ? confirmedBreakoutBuy : (basicBreakoutBuy and significantBreakout)
breakoutSell = requireConfirmation ? confirmedBreakoutSell : (basicBreakoutSell and significantBreakoutDown)

// Range compression signals (channel width narrows significantly)
currentRange = upper - lower
previousRange = upper[length] - lower[length]
rangeCompression = currentRange < previousRange * 0.7  // Channel width decreased by 30% or more

// Range expansion after compression
rangeExpansion = rangeCompression[1] and currentRange > previousRange

// Combined signals
buy = useBreakoutSignals ? breakoutBuy : (useRangeCompressionSignals and rangeExpansion and close > middle)
sell = useBreakoutSignals ? breakoutSell : (useRangeCompressionSignals and rangeExpansion and close < middle)

// === PLOTS ===
upperPlot = plot(upper, title="Upper Channel", color=color.red)
lowerPlot = plot(lower, title="Lower Channel", color=color.green)
middlePlot = plot(useMiddleChannel ? middle : na, title="Middle Channel", color=color.blue)
fill(upperPlot, middlePlot, color=color.new(color.red, 90))
fill(middlePlot, lowerPlot, color=color.new(color.green, 90))

plotshape(buy, title="Buy", text="Buy", style=shape.labeldown, location=location.abovebar, 
          color=color.green, textcolor=color.white, size=size.tiny)
plotshape(sell, title="Sell", text="Sell", style=shape.labelup, location=location.belowbar, 
          color=color.red, textcolor=color.white, size=size.tiny)

// === ALERTS ===
alertcondition(buy, title="Donchian Buy", 
               message="Donchian Channel Buy signal on {{ticker}} at {{close}}")
alertcondition(sell, title="Donchian Sell", 
               message="Donchian Channel Sell signal on {{ticker}} at {{close}}")
