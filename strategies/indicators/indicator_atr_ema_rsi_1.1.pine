//@version=6
indicator(title="Indicator ATR/EMA/RSI with Trail", overlay=true)

src = close

// === ATR ===
keyvalue      = input.float(3.5, title="ATR Multiplier. Adjusts stop size", step=0.5)
atrperiod     = input.int(14, title="ATR Period")
xATR  = ta.atr(atrperiod)
nLoss = keyvalue * xATR

var float xATRTrailingStop = na
xATRTrailingStop := src > nz(xATRTrailingStop[1], 0) and src[1] > nz(xATRTrailingStop[1], 0) ? math.max(nz(xATRTrailingStop[1]), src - nLoss) :
   src < nz(xATRTrailingStop[1], 0) and src[1] < nz(xATRTrailingStop[1], 0) ? math.min(nz(xATRTrailingStop[1]), src + nLoss) :
   src > nz(xATRTrailingStop[1], 0) ? src - nLoss : src + nLoss

// === Trailing Stop % - new addition, similar to indicator_ema.pine ===
trailPerc = input.float(2.5, title="Trailing Stop %", minval=0.1, step=0.1)
trailFactor = trailPerc / 100

var float trailStopBuy = na
var float trailStopSell = na

var int pos = 0  // 1 = long, -1 = short, 0 = flat

// === EMA ===
emaLen = input.int(9, title="EMA Period")
ema9 = ta.ema(src, emaLen)
// plot(ema9, title="EMA 9", color=color.blue)

// === Confirm candles is either bullish or bearish ===
bullishCandle = close > open
bearishCandle = close < open

// === RSI ===
rsiPeriod = input.int(14, title="RSI Period", minval=2)
rsiUpper = input.int(50, title="RSI Upper Threshold")
rsiLower = input.int(50, title="RSI Lower Threshold")
rsiValue = ta.rsi(close, rsiPeriod)

// === ATR and EMA raw signal ===
buy_signal_raw  = ta.crossover(ema9, xATRTrailingStop)
sell_signal_raw = ta.crossunder(ema9, xATRTrailingStop)

// === Confirm entering with candles and RSI ===
buy  = buy_signal_raw  and bullishCandle and rsiValue > rsiUpper
sell = sell_signal_raw and bearishCandle and rsiValue < rsiLower

// === Manage trailing stop for long ===
if buy
    trailStopBuy := close * (1 - trailFactor)
else if pos == 1
    trailStopBuy := math.max(trailStopBuy, close * (1 - trailFactor))

// === Manage trailing stop for short ===
if sell
    trailStopSell := close * (1 + trailFactor)
else if pos == -1
    trailStopSell := math.min(trailStopSell, close * (1 + trailFactor))

// === Trailing stop exits ===
exitLong  = pos == 1 and close < trailStopBuy
exitShort = pos == -1 and close > trailStopSell

// === Update position state ===
if buy
    pos := 1
else if sell
    pos := -1
else if exitLong or exitShort
    pos := 0


// === Plot trailing stops ===
trailStopBuyColor  = pos == 1 ? color.rgb(218, 241, 2) : color.new(color.rgb(230, 241, 128), 95)
trailStopSellColor = pos == -1 ? color.purple : color.new(color.purple, 95)

plot(trailStopBuy, "Long Trailing Stop", color=trailStopBuyColor, style=plot.style_stepline)
plot(trailStopSell, "Short Trailing Stop", color=trailStopSellColor, style=plot.style_stepline)


// === Plot AT/EMA trailing stop ===
xcolor = pos == -1 ? color.rgb(211, 104, 253) : pos == 1 ? color.rgb(239, 247, 136) : color.rgb(159, 190, 216)
plot(xATRTrailingStop, color=xcolor, title="ATR Trailing Stop")

// === Plot BUY/SELL & EXIT signals ===
isBarClosed = barstate.isconfirmed

plotshape(buy and isBarClosed, title="Buy", text='Buy', style=shape.labeldown, location=location.abovebar, color=color.green, textcolor=color.white, size=size.tiny)
plotshape(sell and isBarClosed, title="Sell", text='Sell', style=shape.labelup, location=location.belowbar, color=color.red, textcolor=color.white, size=size.tiny)
plotshape(exitLong and isBarClosed, title="Exit Long", text="Exit Long", style=shape.labelup, location=location.belowbar, color=color.orange, textcolor=color.white, size=size.small)
plotshape(exitShort and isBarClosed, title="Exit Short", text="Exit Short", style=shape.labeldown, location=location.abovebar, color=color.purple, textcolor=color.white, size=size.small)

// === Alerts ===
alertcondition(buy and isBarClosed, title='B', message='{"symbol":"{{ticker}}","side":"B","price":{{close}}}')
alertcondition(sell and isBarClosed, title='S', message='{"symbol":"{{ticker}}","side":"S","price":{{close}}}')
alertcondition(exitLong and isBarClosed, title="Exit Long Alert", message='{"symbol":"{{ticker}}","side":"Exit Long","price":{{close}}}')
alertcondition(exitShort and isBarClosed, title="Exit Short Alert", message='{"symbol":"{{ticker}}","side":"Exit Short","price":{{close}}}')