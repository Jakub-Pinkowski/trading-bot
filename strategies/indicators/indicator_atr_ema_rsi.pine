//@version=6
indicator(title="Indicator ATR/EMA/RSI", overlay=true)

src = close

// === ATR ===
keyvalue      = input.float(3.5, title="ATR Multiplier. Adjusts stop size", step=0.5)
atrperiod     = input.int(14, title="ATR Period")
xATR  = ta.atr(atrperiod)
nLoss = keyvalue * xATR

var float xATRTrailingStop = na
xATRTrailingStop := src > nz(xATRTrailingStop[1], 0) and src[1] > nz(xATRTrailingStop[1], 0) ? math.max(nz(xATRTrailingStop[1]), src - nLoss) :
   src < nz(xATRTrailingStop[1], 0) and src[1] < nz(xATRTrailingStop[1], 0) ? math.min(nz(xATRTrailingStop[1]), src + nLoss) :
   src > nz(xATRTrailingStop[1], 0) ? src - nLoss : src + nLoss

var int pos = 0
pos := src[1] < nz(xATRTrailingStop[1], 0) and src > nz(xATRTrailingStop[1], 0) ? 1 :
   src[1] > nz(xATRTrailingStop[1], 0) and src < nz(xATRTrailingStop[1], 0) ? -1 : nz(pos[1], 0)

xcolor = pos == -1 ? color.yellow : pos == 1 ? #7E57C2 : color.blue

plot(xATRTrailingStop, color=xcolor, title="Trailing Stop")

// === EMA ===
emaLen = input.int(9, title="EMA Period")
ema9 = ta.ema(src, emaLen)
plot(ema9, title="EMA 9", color=color.blue)

// === Confirm candles is either bullish or bearish ===
bullishCandle = close > open        // Current candle is bullish
bearishCandle = close < open        // Current candle is bearish

// === RSI ===
rsiPeriod = input.int(14, title="RSI Period", minval=2)
rsiUpper = input.int(55, title="RSI Upper Threshold")
rsiLower = input.int(45, title="RSI Lower Threshold")
rsiValue = ta.rsi(close, rsiPeriod)

// === ATR and EMA raw signal ===
buy_signal_raw  = ta.crossover(ema9, xATRTrailingStop)
sell_signal_raw = ta.crossunder(ema9, xATRTrailingStop)

// === Confirm entering with candles and RSI ===
buy  = buy_signal_raw  and bullishCandle and rsiValue > rsiUpper
sell = sell_signal_raw and bearishCandle and rsiValue < rsiLower

// === Alert only of bar is already closed ===
isBarClosed = barstate.isconfirmed

// === Plot BUY/SELL signals ===
plotshape(buy and isBarClosed, title="Buy", text='Buy', style=shape.labeldown, location=location.abovebar, color=color.green, textcolor=color.white, size=size.tiny)
plotshape(sell and isBarClosed, title="Sell", text='Sell', style=shape.labelup, location=location.belowbar, color=color.red, textcolor=color.white, size=size.tiny)

// === Alerts ===
alertcondition(buy and isBarClosed, title='B', message='{"symbol":"{{ticker}}","side":"B","price":{{close}}}')
alertcondition(sell and isBarClosed, title='S', message='{"symbol":"{{ticker}}","side":"S","price":{{close}}}')